// app/dashboard/[id]/page.js
import Navbar from "@/app/components/navbar";
import Image from "next/image";
import StockDetails from "../../components/stockDetails";
import Graph from "../../components/graph";

async function getStockDetails(ticker) {
  // Fetch details for the specific stock by ID
  const stockResult = await fetch(
    `https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker}&apikey=97ZQ3CFC3FO34UID`,
    {
      cache: "no-store",
    }
  );
  const data = await stockResult.json();

  console.log("getStockDetails--", data);

  // Assuming you need to process the data to extract relevant details
  const projectDetails = {
    ticker,
    // Add more details from the response as needed
    ...data,
  };

  return projectDetails;
}

async function getGraphDetails(ticker) {
  // Fetch details for the graph
  const graphResult = await fetch(
    `https://www.alphavantage.co/query?function=ANALYTICS_SLIDING_WINDOW&SYMBOLS=${ticker}&RANGE=2month&INTERVAL=DAILY&OHLC=close&WINDOW_SIZE=20&CALCULATIONS=MEAN&apikey=97ZQ3CFC3FO34UID`,
    {
      cache: "no-store",
    }
  );
  const graphData = await graphResult.json();

  console.log("graphData---", graphData);

  // Assuming you need to process the data to extract relevant details
  const graphDetails = {
    ticker,
    // Add more details from the response as needed
    ...graphData,
  };

  let labelList: any[];
  let dataList: any[];

  if (!graphData.error) {
    labelList = Object.keys(
      graphData?.payload?.RETURNS_CALCULATIONS?.MEAN?.RUNNING_MEAN[`${ticker}`]
    );
    dataList = Object.values(
      graphData?.payload?.RETURNS_CALCULATIONS?.MEAN?.RUNNING_MEAN[`${ticker}`]
    );
  }

  const data = {
    labels: labelList,
    datasets: [
      {
        label: "Dataset 1",
        data: dataList,
        fill: false,
        backgroundColor: "rgba(75,192,192,0.2)",
        borderColor: "rgba(75,192,192,1)",
      },
    ],
  };

  return data;
}

export default async function ProjectDetailsPage({ params }) {
  const { ticker } = params;
  const graphData = await getGraphDetails(ticker);
  const stockDetails = await getStockDetails(ticker);

  // const stockDetails = {
  //   Symbol: "IBM",
  //   AssetType: "Common Stock",
  //   Name: "International Business Machines",
  //   Description:
  //     "International Business Machines Corporation (IBM) is an American multinational technology company headquartered in Armonk, New York, with operations in over 170 countries. The company began in 1911, founded in Endicott, New York, as the Computing-Tabulating-Recording Company (CTR) and was renamed International Business Machines in 1924. IBM is incorporated in New York. IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most annual U.S. patents generated by a business (as of 2020) for 28 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.",
  //   CIK: "51143",
  //   Exchange: "NYSE",
  //   Currency: "USD",
  //   Country: "USA",
  //   Sector: "TECHNOLOGY",
  //   Industry: "COMPUTER & OFFICE EQUIPMENT",
  //   Address: "1 NEW ORCHARD ROAD, ARMONK, NY, US",
  //   FiscalYearEnd: "December",
  //   LatestQuarter: "2024-03-31",
  //   MarketCapitalization: "155271463000",
  //   EBITDA: "14380000000",
  //   PERatio: "19.16",
  //   PEGRatio: "4.2",
  //   BookValue: "25.32",
  //   DividendPerShare: "6.64",
  //   DividendYield: "0.0395",
  //   EPS: "8.82",
  //   RevenuePerShareTTM: "67.94",
  //   ProfitMargin: "0.132",
  //   OperatingMarginTTM: "0.102",
  //   ReturnOnAssetsTTM: "0.0458",
  //   ReturnOnEquityTTM: "0.362",
  //   RevenueTTM: "62068998000",
  //   GrossProfitTTM: "32688000000",
  //   DilutedEPSTTM: "8.82",
  //   QuarterlyEarningsGrowthYOY: "0.701",
  //   QuarterlyRevenueGrowthYOY: "0.015",
  //   AnalystTargetPrice: "181.57",
  //   AnalystRatingStrongBuy: "4",
  //   AnalystRatingBuy: "4",
  //   AnalystRatingHold: "10",
  //   AnalystRatingSell: "2",
  //   AnalystRatingStrongSell: "0",
  //   TrailingPE: "19.16",
  //   ForwardPE: "18.12",
  //   PriceToSalesRatioTTM: "2.701",
  //   PriceToBookRatio: "7.42",
  //   EVToRevenue: "3.453",
  //   EVToEBITDA: "14.54",
  //   Beta: "0.745",
  //   "52WeekHigh": "199.18",
  //   "52WeekLow": "121.1",
  //   "50DayMovingAverage": "181.46",
  //   "200DayMovingAverage": "163.88",
  //   SharesOutstanding: "918603000",
  //   DividendDate: "2024-06-10",
  //   ExDividendDate: "2024-05-09",
  // };

  return (
    <div>
      <Navbar />
      <div className="flex justify-center flex-col p-20 pt-4">
        <div className="text-black">
          <div className="flex">
            <div className="pr-10">
              <Image
                src="https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg" // Path to your image
                alt="Description of image"
                width={60} // Desired width in pixels
                height={60} // Desired height in pixels
              />
            </div>
            <div className="flex justify-between w-[93%] mt-2">
              <div>
                <h3 className="font-bold">{stockDetails.Name}</h3>
                <p>{stockDetails.AssetType}</p>
                <p>{stockDetails.Exchange}</p>
              </div>
              <div>
                <p className="font-bold">${stockDetails.AnalystTargetPrice}</p>
                <p className="text-green-500">+{stockDetails.Beta}</p>
              </div>
            </div>
          </div>
        </div>
        <div className="text-black border-2 border-gray-5 h-80 rounded-lg mt-6">
          <Graph graphData={graphData} />
        </div>
        <div className="text-black border-2 border-gray-5 h-80 mt-6 rounded-lg">
          <StockDetails stockData={stockDetails} />
        </div>
      </div>
    </div>
  );
}
